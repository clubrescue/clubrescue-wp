<?php

/**
 * The class holding all the logic for the 'Club.Rescue-WP' settings page used to configure the plugin.
 *
 * Partially generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */
class ClubRescueWP {
	private $club_rescue_wp_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'club_rescue_wp_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'club_rescue_wp_page_init' ) );
	}

	public function club_rescue_wp_add_plugin_page() {
		add_options_page(
			'C.R-WP', // page_title
			'C.R-WP', // menu_title
			'manage_options', // capability
			'cr-wp', // menu_slug
			array( $this, 'club_rescue_wp_create_admin_page' ) // function
		);
	}

	public function club_rescue_wp_create_admin_page() {
		$this->club_rescue_wp_options = get_option( 'crwp_settings' ); ?>

		<div class="wrap">
			<h2>Club.Rescue-WP</h2>
			<p>Settings and whitelabel options for My Club.Rescue can be configured here.</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'club_rescue_wp_option_group' );
					do_settings_sections( 'club-rescue-wp-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function club_rescue_wp_page_init() {
		register_setting(
			'club_rescue_wp_option_group', // option_group
			'crwp_settings', // option_name
			array( $this, 'club_rescue_wp_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'club_rescue_wp_setting_general', // id
			'General', // title
			array( $this, 'club_rescue_wp_general_info' ), // callback
			'club-rescue-wp-admin' // page
		);

		add_settings_section(
			'club_rescue_wp_setting_advanced', // id
			'Advanced', // title
			array( $this, 'club_rescue_wp_advanced_info' ), // callback
			'club-rescue-wp-admin' // page
		);

		add_settings_field(
			'crwp_pages_0', // id
			'My Club.Rescue pages', // title
			array( $this, 'crwp_pages_0_callback' ), // callback
			'club-rescue-wp-admin', // page
			'club_rescue_wp_setting_general' // section
		);

		add_settings_field(
			'crwp_otap_1', // id
			'Whitelabel (OTAP)', // title
			array( $this, 'crwp_otap_1_callback' ), // callback
			'club-rescue-wp-admin', // page
			'club_rescue_wp_setting_general' // section
		);

		add_settings_field(
			'crwp_source_2', // id
			'Default source', // title
			array( $this, 'crwp_source_2_callback' ), // callback
			'club-rescue-wp-admin', // page
			'club_rescue_wp_setting_general' // section
		);

		add_settings_field(
			'crwp_variable_3', // id
			'Default variable', // title
			array( $this, 'crwp_variable_3_callback' ), // callback
			'club-rescue-wp-admin', // page
			'club_rescue_wp_setting_general' // section
		);

		add_settings_field(
			'crwp_errormessage_4', // id
			'Error message', // title
			array( $this, 'crwp_errormessage_4_callback' ), // callback
			'club-rescue-wp-admin', // page
			'club_rescue_wp_setting_general' // section
		);

		add_settings_field(
			'crwp_links_5', // id
			'Club.Rescue link', // title
			array( $this, 'crwp_links_5_callback' ), // callback
			'club-rescue-wp-admin', // page
			'club_rescue_wp_setting_advanced' // section
		);

		add_settings_field(
			'crwp_branch_6', // id
			'Branch', // title
			array( $this, 'crwp_branch_6_callback' ), // callback
			'club-rescue-wp-admin', // page
			'club_rescue_wp_setting_advanced' // section
		);
	}

	public function club_rescue_wp_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['crwp_pages_0'] ) ) {
			$sanitary_values['crwp_pages_0'] = sanitize_text_field( $input['crwp_pages_0'] );
		}

		if ( isset( $input['crwp_otap_1'] ) ) {
			$sanitary_values['crwp_otap_1'] = sanitize_text_field( $input['crwp_otap_1'] );
		}

		if ( isset( $input['crwp_source_2'] ) ) {
			$sanitary_values['crwp_source_2'] = $input['crwp_source_2'];
		}

		if ( isset( $input['crwp_variable_3'] ) ) {
			$sanitary_values['crwp_variable_3'] = $input['crwp_variable_3'];
		}

		if ( isset( $input['crwp_errormessage_4'] ) ) {
			$sanitary_values['crwp_errormessage_4'] = esc_textarea( $input['crwp_errormessage_4'] );
		}

		if ( isset( $input['crwp_links_5'] ) ) {
			$sanitary_values['crwp_links_5'] = $input['crwp_links_5'];
		}

		if ( isset( $input['crwp_branch_6'] ) ) {
			$sanitary_values['crwp_branch_6'] = $input['crwp_branch_6'];
		}

		return $sanitary_values;
	}

	public function club_rescue_wp_section_info() {
		
	}

	public function crwp_pages_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="crwp_settings[crwp_pages_0]" id="crwp_pages_0" value="%s">',
			isset( $this->club_rescue_wp_options['crwp_pages_0'] ) ? esc_attr( $this->club_rescue_wp_options['crwp_pages_0']) : ''
		);
		printf(
			'<p class="description">%s</p>',
			__( 'This specifies the WordPress pages that will contain the shortcodes provided by this plugin.<br>'
			  . 'Only pages listed here will provide working shortcodes cause only these pages will trigger the O365 authentication for Club.Rescue.<br>'
			  . 'Provide pages by using there page slug between \'\' and seperate multiple slug\'s with , for example \'my-cr\' or \'my-cr\', \'my-extra-personal-page\'.                  ' )
		);
	}

	public function crwp_otap_1_callback() {
		printf(
			'<input class="regular-text" type="text" name="crwp_settings[crwp_otap_1]" id="crwp_otap_1" value="%s">',
			isset( $this->club_rescue_wp_options['crwp_otap_1'] ) ? esc_attr( $this->club_rescue_wp_options['crwp_otap_1']) : ''
		);
		printf(
			'<p class="description">%s</p>',
			__( 'This specifies the Club.Rescue installation folder. You can change that folder\'s name to whitelabel the tool.<br>'
			  . 'A whitelabel is only usefull for users that will access Club.Rescue directly.<br>'
			  . 'As a alternative you can use the otap attribute in the shortcode to trigger a second (testing) C.R installation as a source.' )
		);
	}

	public function crwp_source_2_callback() {
		?> <select name="crwp_settings[crwp_source_2]" id="crwp_source_2">
			<?php $selected = (isset( $this->club_rescue_wp_options['crwp_source_2'] ) && $this->club_rescue_wp_options['crwp_source_2'] === 'value1') ? 'selected' : '' ; ?>
			<option value="value1" <?php echo $selected; ?>>label1</option>
			<?php $selected = (isset( $this->club_rescue_wp_options['crwp_source_2'] ) && $this->club_rescue_wp_options['crwp_source_2'] === 'value2') ? 'selected' : '' ; ?>
			<option value="value2" <?php echo $selected; ?>>label2</option>
		</select> <?php
		printf(
			'<p class="description">%s</p>',
			__( 'This specifies the My Club.Rescue submodule to use by default when not using the source attribute in the shortcode.' )
		);
	}

	public function crwp_variable_3_callback() {
		?> <select name="crwp_settings[crwp_variable_3]" id="crwp_variable_3">
			<?php $selected = (isset( $this->club_rescue_wp_options['crwp_variable_3'] ) && $this->club_rescue_wp_options['crwp_variable_3'] === 'value1') ? 'selected' : '' ; ?>
			<option value="value1" <?php echo $selected; ?>>label1</option>
			<?php $selected = (isset( $this->club_rescue_wp_options['crwp_variable_3'] ) && $this->club_rescue_wp_options['crwp_variable_3'] === 'value2') ? 'selected' : '' ; ?>
			<option value="value2" <?php echo $selected; ?>>label2</option>
		</select> <?php
		printf(
			'<p class="description">%s</p>',
			__( 'This specifies the default variable to load from the My Club.Rescue submodule used in the source attribute.' )
		);
	}

	public function crwp_errormessage_4_callback() {
		printf(
			'<textarea class="large-text" rows="5" name="crwp_settings[crwp_errormessage_4]" id="crwp_errormessage_4">%s</textarea>',
			isset( $this->club_rescue_wp_options['crwp_errormessage_4'] ) ? esc_attr( $this->club_rescue_wp_options['crwp_errormessage_4']) : ''
		);
		printf(
			'<p class="description">%s</p>',
			__( 'This specifies the error message which will be displayed if the My Club.Rescue pages cannot be loaded/displayed.' )
		);
	}

	public function crwp_links_5_callback() {
		printf(
			'<input type="checkbox" name="crwp_settings[crwp_links_5]" id="crwp_links_5" value="crwp_links_5" %s> <label for="crwp_links_5">Add a link to Club.Rescue in the plugins dashboard.</label>',
			( isset( $this->club_rescue_wp_options['crwp_links_5'] ) && $this->club_rescue_wp_options['crwp_links_5'] === 'crwp_links_5' ) ? 'checked' : ''
		);
		printf(
			'<p class="description">%s</p>',
			__( 'This specifies if a link to your local Club.Rescue installation will be displayed in the plugins dashboard.' )
		);
	}

	public function crwp_branch_6_callback() {
		?> <fieldset><?php $checked = ( isset( $this->club_rescue_wp_options['crwp_branch_6'] ) && $this->club_rescue_wp_options['crwp_branch_6'] === 'value1' ) ? 'checked' : '' ; ?>
		<label for="crwp_branch_6-0"><input type="radio" name="crwp_settings[crwp_branch_6]" id="crwp_branch_6-0" value="value1" <?php echo $checked; ?>> Master (default).</label><br>
		<?php $checked = ( isset( $this->club_rescue_wp_options['crwp_branch_6'] ) && $this->club_rescue_wp_options['crwp_branch_6'] === 'value2' ) ? 'checked' : '' ; ?>
		<label for="crwp_branch_6-1"><input type="radio" name="crwp_settings[crwp_branch_6]" id="crwp_branch_6-1" value="value2" <?php echo $checked; ?>> Development (only for test environments).</label></fieldset> <?php
		printf(
			'<p class="description">%s</p>',
			__( 'This specifies the branch that will be used to check and deploy for updates.' )
		);
	}

}
if ( is_admin() )
	$club_rescue_wp = new ClubRescueWP();

/* 
 * Retrieve this value with:
 * $club_rescue_wp_options = get_option( 'crwp_settings' ); // Array of All Options
 * $crwp_pages_0 = $club_rescue_wp_options['crwp_pages_0']; // crwp_pages
 * $crwp_otap_1 = $club_rescue_wp_options['crwp_otap_1']; // crwp_otap
 * $crwp_source_2 = $club_rescue_wp_options['crwp_source_2']; // crwp_source
 * $crwp_variable_3 = $club_rescue_wp_options['crwp_variable_3']; // crwp_variable
 * $crwp_errormessage_4 = $club_rescue_wp_options['crwp_errormessage_4']; // crwp_errormessage
 * $crwp_links_5 = $club_rescue_wp_options['crwp_links_5']; // crwp_links
 * $crwp_branch_6 = $club_rescue_wp_options['crwp_branch_6']; // crwp_branch
 */